{"ast":null,"code":"var _jsxFileName = \"/Users/Predator/Documents/GitHub/goit-react-hw-02-phonebook/src/components/PhoneBook/PhoneBook.jsx\";\nimport { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport styles from './phoneBook.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PhoneBook extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [],\n      name: '',\n      number: ''\n    };\n\n    this.addName = () => {\n      this.setState(prevState => {});\n    };\n  }\n\n  render() {\n    const {\n      contacts\n    } = this.state;\n    const {\n      addName\n    } = this;\n    const elements = contacts.map(_ref => {\n      let {\n        id,\n        name,\n        number\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", name, \": \", number, \" \"]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: addName,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.namebox,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.numberbox,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: elements\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PhoneBook;","map":{"version":3,"sources":["/Users/Predator/Documents/GitHub/goit-react-hw-02-phonebook/src/components/PhoneBook/PhoneBook.jsx"],"names":["Component","nanoid","styles","PhoneBook","state","contacts","name","number","addName","setState","prevState","render","elements","map","id","namebox","numberbox"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAElCI,KAFkC,GAE1B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAF0B;;AAAA,SAQ9BC,OAR8B,GAQpB,MAAM;AACZ,WAAKC,QAAL,CAAcC,SAAS,IAAI,CAAE,CAA7B;AAEH,KAX6B;AAAA;;AAa9BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEN,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAc,IAApB;AACA,UAAMI,QAAQ,GAAGP,QAAQ,CAACQ,GAAT,CAAa;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAMR,QAAAA,IAAN;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BAC1B;AAAA,wBAAgBD,IAAhB,QAAwBC,MAAxB;AAAA,SAASO,EAAT;AAAA;AAAA;AAAA;AAAA,cAD0B;AAAA,KAAb,CAAjB;AAGA,wBACI;AAAA,6BACI;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAEN,OAA1B;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEN,MAAM,CAACa,OAAvB;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,OAAO,EAAC,wHAHZ;AAII,YAAA,KAAK,EAAC,wIAJV;AAKI,YAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAK,UAAA,SAAS,EAAEb,MAAM,CAACc,SAAvB;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AACI,YAAA,IAAI,EAAC,KADT;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,OAAO,EAAC,wFAHZ;AAII,YAAA,KAAK,EAAC,8FAJV;AAKI,YAAA,QAAQ;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAqBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAsBI;AAAA,iCAAK;AAAA,sBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,gBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AA/C6B;;AAkDlC,eAAeT,SAAf","sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from 'nanoid'\n\nimport styles from './phoneBook.module.css'\n\nclass PhoneBook extends Component {\n\nstate = {\n  contacts: [],\n    name: '',\n  number: ''\n}\n    \n    addName = () => {\n        this.setState(prevState => {})\n\n    }\n\n    render() {\n        const { contacts } = this.state;\n        const { addName } = this; \n        const elements = contacts.map(({ id, name, number }) => (\n            <li key={id} > {name}: {number} </li>\n        ));\n        return (\n            <div>\n                <form action=\"\" onSubmit={addName}>\n                    <div className={styles.namebox}>\n                    <label htmlFor=\"\">Name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                    />\n                    </div>\n                    <div className={styles.numberbox}>\n                        <label htmlFor=\"\">Number</label>\n                        <input\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\">Add contact</button>\n                    <div><ul>{ elements }</ul></div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default PhoneBook"]},"metadata":{},"sourceType":"module"}