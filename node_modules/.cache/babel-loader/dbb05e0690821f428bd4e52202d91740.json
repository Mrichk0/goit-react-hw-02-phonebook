{"ast":null,"code":"var _jsxFileName = \"/Users/Predator/Documents/GitHub/goit-react-hw-02-phonebook/src/components/PhoneBook/ContactForm/ContactForm.jsx\";\nimport { Component } from \"react\";\nimport { initialState } from \"./initialState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ContactForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = { ...initialState\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n      this.setState({\n        name: '',\n        number: ''\n      });\n    };\n  }\n\n  render() {\n    const {\n      name,\n      number\n    } = this.state;\n    const {\n      handleChange,\n      handleSubmit\n    } = this;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          type: \"text\",\n          name: \"name\",\n          onChange: handleChange,\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: number,\n          type: \"tel\",\n          name: \"number\",\n          onChange: handleChange,\n          pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n          title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Predator/Documents/GitHub/goit-react-hw-02-phonebook/src/components/PhoneBook/ContactForm/ContactForm.jsx"],"names":["Component","initialState","ContactForm","state","handleChange","target","name","value","setState","handleSubmit","event","preventDefault","props","onSubmit","number","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEpCG,KAFoC,GAE5B,EACJ,GAAGF;AADC,KAF4B;;AAAA,SAMhCG,YANgC,GAMjB,QAAc;AAAA,UAAb;AAACC,QAAAA;AAAD,OAAa;AACzB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,MAAxB;AACA,WAAKG,QAAL,CAAc;AACV,SAACF,IAAD,GAAQC;AADE,OAAd;AAGH,KAX+B;;AAAA,SAahCE,YAbgC,GAahBC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoB,KAAKV,KAAzB;AACA,WAAKK,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAE,EADI;AAEVQ,QAAAA,MAAM,EAAE;AAFE,OAAd;AAIH,KApB+B;AAAA;;AAsB/BC,EAAAA,MAAM,GAAG;AACN,UAAM;AAAET,MAAAA,IAAF;AAAQQ,MAAAA;AAAR,QAAmB,KAAKX,KAA9B;AACA,UAAM;AAAEC,MAAAA,YAAF;AAAgBK,MAAAA;AAAhB,QAAkC,IAAxC;AAEA,wBAEQ;AAAM,MAAA,MAAM,EAAC,EAAb;AAAgB,MAAA,QAAQ,EAAEA,YAA1B;AAAA,8BACI;AAAA,gCACA;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AACI,UAAA,KAAK,EAAEH,IADX;AAEA,UAAA,IAAI,EAAC,MAFL;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,QAAQ,EAAEF,YAJV;AAKA,UAAA,OAAO,EAAC,wHALR;AAMA,UAAA,KAAK,EAAC,wIANN;AAOA,UAAA,QAAQ;AAPR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAcI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,KAAK,EAAEU,MADX;AAEI,UAAA,IAAI,EAAC,KAFT;AAGI,UAAA,IAAI,EAAC,QAHT;AAII,UAAA,QAAQ,EAAEV,YAJd;AAKI,UAAA,OAAO,EAAC,wFALZ;AAMI,UAAA,KAAK,EAAC,8FANV;AAOI,UAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eA0BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR;AAgCH;;AA1D+B;;AA6DpC,eAAeF,WAAf","sourcesContent":["import { Component } from \"react\";\n\nimport { initialState } from \"./initialState\";\n\nclass ContactForm extends Component {\n\nstate = {\n    ...initialState\n} \n    \n    handleChange = ({target}) => {\n        const { name, value } = target;\n        this.setState({\n            [name]: value\n        })\n    } \n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.onSubmit(this.state)\n        this.setState({\n            name: '',\n            number: '',\n        }) \n    }\n\n     render() {\n        const { name, number } = this.state;\n        const { handleChange, handleSubmit  } = this;\n        \n        return (\n            \n                <form action=\"\" onSubmit={handleSubmit}>\n                    <div >\n                    <label htmlFor=\"\">Name</label>\n                        <input\n                            value={name}\n                        type=\"text\"\n                        name=\"name\"\n                        onChange={handleChange}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        \n                    />\n                    </div>\n                    <div >\n                        <label htmlFor=\"\">Number</label>\n                        <input\n                            value={number}\n                            type=\"tel\"\n                            name=\"number\"\n                            onChange={handleChange}\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" >Add contact</button>\n                </form>\n                 \n        )\n    }\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}