{"ast":null,"code":"var _jsxFileName = \"/Users/Predator/Documents/GitHub/goit-react-hw-02-phonebook/src/components/PhoneBook/PhoneBook.jsx\";\nimport { Component } from \"react\";\nimport { nanoid } from 'nanoid';\nimport ContactForm from \"./ContactForm\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\"; // import styles from './phoneBook.module.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PhoneBook extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = data => {\n      const {\n        contacts\n      } = this.state;\n      const dublicate = contacts.find(contact => contact.name === data.name);\n\n      if (dublicate) {\n        alert(`${data.name} is already in contacts`);\n        return;\n      }\n\n      this.setState(prevState => {\n        const {\n          contacts\n        } = prevState;\n        const {\n          name,\n          number\n        } = data;\n        const newContact = {\n          name,\n          number,\n          id: nanoid()\n        };\n        return {\n          contacts: [...contacts, newContact]\n        };\n      });\n    };\n\n    this.deleteContact = id => {\n      this.setState(prevState => {\n        const {\n          contacts\n        } = prevState;\n        return {\n          contacts: contacts.filter(contact => contact.id !== id)\n        };\n      });\n    };\n\n    this.changeFilter = _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        filter: target.value\n      });\n    };\n  }\n\n  getFilteredContacts() {\n    const {\n      filter,\n      contacts\n    } = this.state;\n\n    if (!filter) {\n      return contacts;\n    }\n\n    const filterText = filter.toLowerCase();\n    const filterContacts = contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      const result = name.toLowerCase().includes(filterText);\n      return result;\n    });\n    return filterContacts;\n  }\n\n  render() {\n    const {\n      filter\n    } = this.state;\n    const {\n      addContact,\n      deleteContact,\n      changeFilter\n    } = this;\n    const contacts = this.getFilteredContacts();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: filter,\n        changeFilter: changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: contacts,\n        deleteContact: deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PhoneBook;","map":{"version":3,"sources":["/Users/Predator/Documents/GitHub/goit-react-hw-02-phonebook/src/components/PhoneBook/PhoneBook.jsx"],"names":["Component","nanoid","ContactForm","ContactList","Filter","PhoneBook","state","contacts","id","name","number","filter","addContact","data","dublicate","find","contact","alert","setState","prevState","newContact","deleteContact","changeFilter","target","value","getFilteredContacts","filterText","toLowerCase","filterContacts","result","includes","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { nanoid } from 'nanoid'\n\nimport ContactForm from \"./ContactForm\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\n\n// import styles from './phoneBook.module.css'\n\nclass PhoneBook extends Component {\n\nstate = {\n    contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: '',\n}\n    \n    addContact = (data) => {\n        const { contacts } = this.state;\n            const dublicate = contacts.find(contact => contact.name === data.name);\n            if (dublicate) {\n                alert(`${data.name} is already in contacts`);\n                return\n            }\n        this.setState(prevState => {\n            const { contacts } = prevState;\n            const { name, number } = data;\n            const newContact = {\n                name,\n                number,\n                id: nanoid() \n            }\n            return {\n                contacts: [...contacts, newContact]\n            }\n        })\n    }\n    \n    deleteContact = (id) => {\n        this.setState(prevState => {\n            const { contacts } = prevState;\n            return {\n                contacts:  contacts.filter(contact => contact.id !== id)\n            }\n        })\n    }\n\n    changeFilter = ({ target }) => {\n        this.setState({\n            filter: target.value\n        })\n    }\n\n    getFilteredContacts() {\n        const { filter, contacts } = this.state;\n        if (!filter) {\n            return contacts \n        }\n        const filterText = filter.toLowerCase();\n        const filterContacts = contacts.filter(({ name }) => {\n            const result = name.toLowerCase().includes(filterText);\n            return result\n        })\n        return filterContacts;\n    }\n\n    render() {\n        const {  filter } = this.state;\n        const { addContact, deleteContact, changeFilter } = this;\n        \n        const contacts = this.getFilteredContacts();\n\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm onSubmit={addContact} />\n                <h2>Contacts</h2>\n                <Filter filter={filter} changeFilter={changeFilter} />\n                <ContactList contacts={contacts} deleteContact={deleteContact} />         \n            </div>\n        )\n    }\n}\n\nexport default PhoneBook;"]},"metadata":{},"sourceType":"module"}